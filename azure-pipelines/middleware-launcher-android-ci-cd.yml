trigger:
  - master
  - refs/tags/*

pool:
  vmImage: "windows-2022"

variables:
  - name: buildConfiguration
    value: "Release"
  - name: outputDirectory
    value: "$(build.binariesDirectory)/$(buildConfiguration)"
  - name: testOutputDirectory
    value: "$(build.binariesDirectory)/test/$(buildConfiguration)"
  - group: middleware-launcher-android

stages:
  - stage: BuildAndTest
    displayName: Build and test
    jobs:
      - job: Build
        steps:
          - checkout: self
            lfs: true
            submodules: true

          - task: NuGetToolInstaller@1

          - task: yavt@1
            inputs:
              pathToVersionJson: "version.json"
              semverVersion: "v1"
              failOnTagVersionMismatch: true

          - pwsh: |
              $file = "./src/fiskaltrust.AndroidLauncher.Common/Resources/values/appSettings.xml"
              $content = (Get-Content $file)

              $content = $content.Replace("{{AppInsightsInstrumentationKeyProduction}}", $AppInsightsInstrumentationKeyProduction)
              $content = $content.Replace("{{AppInsightsInstrumentationKeySandbox}}", $AppInsightsInstrumentationKeySandbox)

              $content | Set-Content $file

          - task: android-manifest-version@1
            inputs:
              sourcePath: "src/fiskaltrust.AndroidLauncher.Http/Properties/AndroidManifest.xml"
              versionCodeOption: "buildid"
              versionCode: "$(Build.BuildId)"
              versionName: "$(Build.BuildNumber)"
              printFile: true
            displayName: Version HTTP Launcher

          - task: android-manifest-version@1
            inputs:
              sourcePath: "src/fiskaltrust.AndroidLauncher.Grpc/Properties/AndroidManifest.xml"
              versionCodeOption: "buildid"
              versionCode: "$(Build.BuildId)"
              versionName: "$(Build.BuildNumber)"
              printFile: true
            displayName: Version gRPC Launcher

          - task: NuGetCommand@2
            inputs:
              command: "restore"
              restoreSolution: "fiskaltrust.AndroidLauncher.sln"
              feedsToUse: "config"
              nugetConfigPath: "NuGet.config"
            displayName: Restore NuGet packages

          - task: NuGetCommand@2
            inputs:
              command: "restore"
              restoreSolution: "middleware/queue/fiskaltrust.Middleware.sln"
              feedsToUse: "config"
              nugetConfigPath: "middleware/nuget.config"
            displayName: Restore Middleware NuGet packages

          - task: NuGetCommand@2
            inputs:
              command: "restore"
              restoreSolution: "middleware/scu-de/fiskaltrust.Middleware.SCU.DE.sln"
              feedsToUse: "config"
              nugetConfigPath: "middleware/nuget.config"
            displayName: Restore SCU.DE NuGet packages

          - task: NuGetCommand@2
            inputs:
              command: "restore"
              restoreSolution: "middleware/scu-de/fiskaltrust.Middleware.SCU.DE.Android.sln"
              feedsToUse: "config"
              nugetConfigPath: "middleware/nuget.config"
            displayName: Restore SCU.DE.Android NuGet packages

          - task: NuGetCommand@2
            inputs:
              command: "restore"
              restoreSolution: "middleware/scu-it/fiskaltrust.Middleware.SCU.IT.sln"
              feedsToUse: "config"
              nugetConfigPath: "middleware/nuget.config"
            displayName: Restore SCU.IT NuGet packages

          - task: JavaToolInstaller@0
            inputs:
              versionSpec: "17"
              jdkArchitectureOption: "x64"
              jdkSourceOption: "PreInstalled"

          - task: XamarinAndroid@1
            inputs:
              projectFile: "**/fiskaltrust.AndroidLauncher.Http.csproj"
              outputDirectory: "$(outputDirectory)"
              configuration: "$(buildConfiguration)"
              msbuildVersionOption: "latest"
              jdkOption: "JDKVersion"
            displayName: Build HTTP Launcher

          - task: XamarinAndroid@1
            inputs:
              projectFile: "**/fiskaltrust.AndroidLauncher.Grpc.csproj"
              outputDirectory: "$(outputDirectory)"
              configuration: "$(buildConfiguration)"
              msbuildVersionOption: "latest"
              jdkOption: "JDKVersion"
            displayName: Build gRPC Launcher

          - task: SSMClientToolsSetup@1
            condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
          - task: SSMSigningToolsSetup@1
            condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')

          - task: DownloadSecureFile@1
            condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
            name: clientCertificate
            displayName: "Download client certificate"
            inputs:
              secureFile: "codesigning_client_cert.p12"

          - pwsh: smctl certificate download --keypair-alias=$(KEYPAIR_ALIAS) --name=KeyCert.pem --out=$(Agent.TempDirectory)
            condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
            env:
              SM_HOST: "$(SM_HOST)"
              SM_API_KEY: "$(SM_API_KEY)"
              SM_CLIENT_CERT_PASSWORD: "$(SM_CLIENT_CERT_PASSWORD)"
              SM_CLIENT_CERT_FILE: "$(clientCertificate.secureFilePath)"
              SM_TLS_SKIP_VERIFY: false

          - pwsh: |
              & {
                Get-ChildItem -Path "$(Build.SourcesDirectory)" -Filter *.apk -Recurse;
                Get-ChildItem -Path "$(Build.SourcesDirectory)" -Filter *.aab -Recurse;
              } | ForEach-Object {
              apksigner sign `
                  --provider-class sun.security.pkcs11.SunPKCS11 `
                  --provider-arg "$(SSMClientToolsSetup.PKCS11_CONFIG)" `
                  --ks NONE `
                  --ks-type PKCS11 `
                  --ks-pass pass:anything `
                  --ks-key-alias $(KEYPAIR_ALIAS) `
                  --v2-signing-enabled true `
                  --in "$_.FullName"
              }
              Write-Host $(Get-Content -Path "~\.signingmanager\logs\smksp.log")
            condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
            env:
              SM_HOST: "$(SM_HOST)"
              SM_API_KEY: "$(SM_API_KEY)"
              SM_CLIENT_CERT_PASSWORD: "$(SM_CLIENT_CERT_PASSWORD)"
              SM_CLIENT_CERT_FILE: "$(clientCertificate.secureFilePath)"
              SM_TLS_SKIP_VERIFY: false

          - task: CopyFiles@2
            inputs:
              contents: "**/*.apk"
              targetFolder: "$(build.artifactStagingDirectory)"
              flattenFolders: true
            displayName: Copy APKs to staging directory

          - powershell:
              Rename-Item -Path "$(build.artifactStagingDirectory)/eu.fiskaltrust.androidlauncher.grpc.apk" -NewName "eu.fiskaltrust.androidlauncher.grpc.$(Build.BuildNumber).apk";
              Rename-Item -Path "$(build.artifactStagingDirectory)/eu.fiskaltrust.androidlauncher.http.apk" -NewName "eu.fiskaltrust.androidlauncher.http.$(Build.BuildNumber).apk";
            displayName: Rename APK files


          - task: PublishPipelineArtifact@0
            inputs:
              artifactName: "drop"
              targetPath: "$(Build.ArtifactStagingDirectory)"

  - stage: ReleaseSandbox
    displayName: Release packages to sandbox
    condition: and(succeeded(), or(eq(variables['DeployToSandbox'], 'true'), startsWith(variables['Build.SourceBranch'], 'refs/tags/')))
    dependsOn: BuildAndTest

    jobs:
      - deployment: ReleaseSandbox
        displayName: Release to sandbox
        pool:
          vmImage: "windows-latest"
        environment: "ft-Middleware-Storage-Sandbox"
        strategy:
          runOnce:
            deploy:
              steps:
                - template: templates/release-to-storage.yaml
                  parameters:
                    subscription: ft-msft-mca-consulting-development-common
                    storage: fta240commonde
                    package: eu.fiskaltrust.androidlauncher.grpc
                - template: templates/release-to-storage.yaml
                  parameters:
                    subscription: ft-msft-mca-consulting-development-common
                    storage: fta240commonde
                    package: eu.fiskaltrust.androidlauncher.http

  - stage: ReleaseProduction
    displayName: Release to production storage
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    dependsOn: ReleaseSandbox

    jobs:
      - deployment: ReleaseProductionStorage
        displayName: Release to production storage
        pool:
          vmImage: "windows-latest"
        environment: "ft-Middleware-Storage-Production"
        strategy:
          runOnce:
            deploy:
              steps:
                - template: templates/release-to-storage.yaml
                  parameters:
                    subscription: ft-acp-csp-market-de-production
                    storage: fta110common
                    package: eu.fiskaltrust.androidlauncher.grpc
                - template: templates/release-to-storage.yaml
                  parameters:
                    subscription: ft-acp-csp-market-de-production
                    storage: fta110common
                    package: eu.fiskaltrust.androidlauncher.http

      # - deployment: ReleaseProductionGooglePlay
      #   displayName: Release to Google Play
      #   pool:
      #     vmImage: "windows-latest"
      #   environment: "ft-Middleware-GooglePlay"
      #   strategy:
      #     runOnce:
      #       deploy:
      #         steps:
      #           - template: templates/release-to-googleplay.yaml
      #             parameters:
      #               package: eu.fiskaltrust.androidlauncher.grpc
      #               serviceConnection: "Google Play Store"
      #           - template: templates/release-to-googleplay.yaml
      #             parameters:
      #               package: eu.fiskaltrust.androidlauncher.http
      #               serviceConnection: "Google Play Store"
